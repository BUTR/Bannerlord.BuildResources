<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <TargetFramework Condition="$(TargetFrameworks) == ''">netstandard2.0</TargetFramework>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(SGVFile) == ''">
    <SGVFile Condition="$([System.IO.File]::Exists('$(MSBuildProjectDirectory)\supported-game-versions.txt'))" >$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)\supported-game-versions.txt'))</SGVFile>
    <SGVFile Condition="$([System.IO.File]::Exists('$(SolutionDir)\supported-game-versions.txt'))" >$([System.IO.File]::ReadAllText('$(SolutionDir)\supported-game-versions.txt'))</SGVFile>
    <SGVFile Condition="$([System.IO.File]::Exists('$(SolutionDir)\..\supported-game-versions.txt'))" >$([System.IO.File]::ReadAllText('$(SolutionDir)\..\supported-game-versions.txt'))</SGVFile>
  </PropertyGroup>

  <ItemGroup>
    <SGVItem Include="$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`))" />
  </ItemGroup>


  <PropertyGroup Condition="$(OverrideGameVersion) == ''">
    <GameVersionFallback>v1.0.0</GameVersionFallback>
    <!-- Parsing  supported-game-versions.txt -->
    <SGVLineCount>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`).Length)</SGVLineCount>
    <SGVLastEntryIndex>$([MSBuild]::Subtract($(SGVLineCount), 1))</SGVLastEntryIndex>
    <!-- First enrty is Beta, second Stable, last Minimal -->
    <FirstLine Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[0])</FirstLine>
    <SecondLine Condition="'$(SGVLineCount)' &gt; 1">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[1])</SecondLine>
    <LastLine Condition="'$(SGVLineCount)' &gt; 0">$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[$(SGVLastEntryIndex)])</LastLine>

    <SecondLine Condition="'$(SecondLine)' == ''">$(FirstLine)</SecondLine>
    <LastLine Condition="'$(LastLine)' == ''">$(SecondLine)</LastLine>
    <!-- -->
    <GameBetaVersion>$(FirstLine)</GameBetaVersion>
    <GameStableVersion>$(SecondLine)</GameStableVersion>
    <GameMinimalVersion>$(LastLine)</GameMinimalVersion>
    <!-- -->
    <GameVersionWithPrefix Condition="$(IsMinimal)">$(GameMinimalVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsStable)">$(GameStableVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsBeta)">$(GameBetaVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(GameVersionWithPrefix) == ''">$(GameVersionFallback)</GameVersionWithPrefix>
    <!-- -->
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>
  <PropertyGroup Condition="$(OverrideGameVersion) != ''">
    <GameVersionWithPrefix>$(OverrideGameVersion)</GameVersionWithPrefix>
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>

  <PropertyGroup>
    <GameVersionFlat>$([System.String]::Copy('$(GameVersion)').Replace('.',''))</GameVersionFlat>
    <GameVersionConstant>v$(GameVersionFlat)</GameVersionConstant>
  </PropertyGroup>
  <PropertyGroup Condition="$(OverrideAssemblyName) == 'true'">
    <AssemblyName>$(ModuleId).$(GameVersion)</AssemblyName>
    <DefineConstants>$(DefineConstants);$(GameVersionConstant)</DefineConstants>
  </PropertyGroup>
  
  <ItemGroup>
    <SubModuleOverrides Include="GameVersion" Condition="$(GameMinimalVersion) != ''">
      <Regex>\$gameversion\$</Regex>
      <Replacement>$(GameMinimalVersion)</Replacement>
    </SubModuleOverrides>
  </ItemGroup>


  <ItemGroup Condition="$(DisableReferenceAssemblies) != 'true'">
    <PackageReference Include="Bannerlord.ReferenceAssemblies" Version="$(GameVersion).*-*" IncludeAssets="compile" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Condition="$(BUTRSharedVersion) != ''" Include="Bannerlord.BUTR.Shared" Version="$(BUTRSharedVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(BUTRModuleManagerVersion) != ''" Include="Bannerlord.ModuleManager.Source" Version="$(BUTRModuleManagerVersion)" />
    <PackageReference Condition="$(BUTRModuleLoaderVersion) != ''" Include="Bannerlord.ModuleLoader.Injector" Version="$(BUTRModuleLoaderVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(UIExtenderExVersion) != ''" Include="Bannerlord.UIExtenderEx" Version="$(UIExtenderExVersion)" IncludeAssets="compile" GeneratePathProperty="true" />
    <PackageReference Condition="$(ButterLibVersion) != ''" Include="Bannerlord.ButterLib" Version="$(ButterLibVersion)" IncludeAssets="compile" GeneratePathProperty="true" />
    <PackageReference Condition="$(MCMVersion) != ''" Include="Bannerlord.MCM" Version="$(MCMVersion)" IncludeAssets="compile" GeneratePathProperty="true" />
    <PackageReference Condition="$(HarmonyExtensionsVersion) != ''" Include="Harmony.Extensions" Version="$(HarmonyExtensionsVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(HarmonyVersion) != ''" Include="Bannerlord.Lib.Harmony" Version="$(HarmonyVersion)" IncludeAssets="compile" GeneratePathProperty="true" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="IsExternalInit" Version="1.0.3" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Nullable" Version="1.3.1" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
  </ItemGroup>


  <!-- GitHub Actions -->
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <!-- NuGet SorceLink -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <!-- SorceLink -->
  <PropertyGroup>
    <Deterministic>true</Deterministic>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>
  <!-- SorceLink -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
  </ItemGroup>
  <!-- CI Builds -->
  <ItemGroup Condition="$(TargetFramework) == 'net472' AND $(OS) != 'Windows_NT'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>


  <Import Project="$(MSBuildThisFileDirectory)/Advanced.targets" />

  <Import Project="$(MSBuildThisFileDirectory)/Basic.targets" />


  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk"/>


  <!-- Enhance build if $(ExtendedBuild) is set, optional -->
  <Target Name="ExtendedBuild" AfterTargets="Build" Condition="'$(ExtendedBuild)' == 'true'">
    <PropertyGroup>
      <ScriptExecutable>pwsh -noprofile -noninteractive -Command</ScriptExecutable>
      <ScriptLocation>$(MSBuildThisFileDirectory)\build-fully.ps1</ScriptLocation>
      <ScriptParams>-BasePath '$(ProjectDir)' -OutputPath '$(GameFolder)' -ModuleId '$(ModuleId)' -ProjectPath '$(ProjectPath)' -Configuration '$(Configuration)'</ScriptParams>
    </PropertyGroup>
    <Exec Command="$(ScriptExecutable) &quot;$(ScriptLocation) $(ScriptParams)&quot;" LogStandardErrorAsError="True" ContinueOnError="False" />
  </Target>

  <!-- Publish all via pack -->
  <Target Name="ExtendedPack" AfterTargets="Pack">
    <PropertyGroup>
      <ScriptExecutable>pwsh -noprofile -noninteractive -Command</ScriptExecutable>
      <ScriptLocation>$(MSBuildThisFileDirectory)\build-fully.ps1</ScriptLocation>
      <ScriptParams>-BasePath '$(ProjectDir)' -OutputPath '$(GameFolder)' -ModuleId '$(ModuleId)' -ProjectPath '$(ProjectPath)' -Configuration '$(Configuration)'</ScriptParams>
    </PropertyGroup>
    <Exec Command="$(ScriptExecutable) &quot;$(ScriptLocation) $(ScriptParams)&quot;" LogStandardErrorAsError="True" ContinueOnError="False" ConsoleToMSBuild="true" />
  </Target>

</Project>