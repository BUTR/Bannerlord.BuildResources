<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk"/>

  <PropertyGroup Condition="$(OverrideGameVersion) == ''">
    <!-- Parsing  supported-game-versions.txt -->
    <SGVLineCount>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`).Length)</SGVLineCount>
    <SGVLastEntryIndex>$([MSBuild]::Subtract($(SGVLineCount), 1))</SGVLastEntryIndex>
    <!-- First enrty is Beta, second Stable, last Minimal -->
    <GameBetaVersion>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[0])</GameBetaVersion>
    <GameStableVersion>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[1])</GameStableVersion>
    <GameMinimalVersion>$([System.Text.RegularExpressions.Regex]::Split($(SGVFile), `\r\n|\r|\n`)[$(SGVLastEntryIndex)])</GameMinimalVersion>
    <!-- -->
    <GameVersionWithPrefix>e1.1.0</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsMinimal)">$(GameMinimalVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsStable)">$(GameStableVersion)</GameVersionWithPrefix>
    <GameVersionWithPrefix Condition="$(IsBeta)">$(GameBetaVersion)</GameVersionWithPrefix>
    <!-- -->
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>
  <PropertyGroup Condition="$(OverrideGameVersion) != ''">
    <GameVersionWithPrefix>$(OverrideGameVersion)</GameVersionWithPrefix>
    <GameVersion>$(GameVersionWithPrefix.Substring(1))</GameVersion>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Bannerlord's Root Folder. Leave empty if you want it to be tried to be autoresolved -->
    <GameFolder Condition="$(IsStable)">$(BANNERLORD_STABLE_DIR)</GameFolder>
    <GameFolder Condition="$(IsBeta)">$(BANNERLORD_BETA_DIR)</GameFolder>
    <GameFolder Condition="$(GameFolder) == ''">$(BANNERLORD_GAME_DIR)</GameFolder>
  </PropertyGroup>

  <PropertyGroup>
    <GameVersionFlat>$([System.String]::Copy('$(GameVersion)').Replace('.',''))</GameVersionFlat>
    <GameVersionConstant>e$(GameVersionFlat)</GameVersionConstant>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyName>$(ModuleId).$(GameVersion)</AssemblyName>
    <Configurations>Stable_Debug;Stable_Release;Beta_Debug;Beta_Release</Configurations>
    <DefineConstants>$(DefineConstants);$(GameVersionConstant)</DefineConstants>
  </PropertyGroup>


  <ItemGroup Condition="$(DisableReferenceAssemblies) != 'true'">
    <PackageReference Include="Bannerlord.ReferenceAssemblies.EarlyAccess" Version="$(GameVersion).*" IncludeAssets="compile" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Condition="$(BUTRSharedVersion) != ''" Include="Bannerlord.BUTR.Shared" Version="$(BUTRSharedVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(BUTRModuleManagerVersion) != ''" Include="Bannerlord.ModuleManager.Source" Version="$(BUTRModuleManagerVersion)" />
    <PackageReference Condition="$(BUTRModuleLoaderVersion) != ''" Include="Bannerlord.ModuleLoader.Injector" Version="$(BUTRModuleLoaderVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(UIExtenderExVersion) != ''" Include="Bannerlord.UIExtenderEx" Version="$(UIExtenderExVersion)" IncludeAssets="compile" />
    <PackageReference Condition="$(ButterLibVersion) != ''" Include="Bannerlord.ButterLib" Version="$(ButterLibVersion)" IncludeAssets="compile" />
    <PackageReference Condition="$(MCMVersion) != ''" Include="Bannerlord.MCM" Version="$(MCMVersion)" IncludeAssets="compile" />
    <PackageReference Condition="$(HarmonyExtensionsVersion) != ''" Include="Harmony.Extensions" Version="$(HarmonyExtensionsVersion)" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Condition="$(HarmonyVersion) != ''" Include="Lib.Harmony" Version="$(HarmonyVersion)" IncludeAssets="compile" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="IsExternalInit" Version="1.0.2" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
    <PackageReference Include="Nullable" Version="1.3.0" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive" />
  </ItemGroup>


  <Import Condition="Exists('$(ProjectDir)/Override.targets')" Project="$(ProjectDir)/Override.targets" />


  <!-- GitHub Actions -->
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <!-- NuGet SorceLink -->
  <PropertyGroup>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <!-- SorceLink -->
  <PropertyGroup>
    <Deterministic>true</Deterministic>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
  </PropertyGroup>
  <!-- SorceLink -->
  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All"/>
  </ItemGroup>
  <!-- CI Builds -->
  <ItemGroup Condition="$(TargetFramework) == 'net472' AND $(OS) != 'Windows_NT'">
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>


  <Import Project="$(MSBuildThisFileDirectory)/Basic.targets" />

</Project>
